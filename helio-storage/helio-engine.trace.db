10-30 12:34:34 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Table LINKRULES not found; SQL statement:
DELETE FROM  LINKRULES; [42S02-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.command.Parser.readTableOrView(Parser.java:3911)
	at org.h2.command.Parser.readTableOrView(Parser.java:3891)
	at org.h2.command.Parser.readSimpleTableFilter(Parser.java:645)
	at org.h2.command.Parser.parseDelete(Parser.java:663)
	at org.h2.command.Parser.parsePrepared(Parser.java:304)
	at org.h2.command.Parser.parse(Parser.java:260)
	at org.h2.command.Parser.parse(Parser.java:232)
	at org.h2.command.Parser.prepareCommand(Parser.java:204)
	at org.h2.engine.Session.prepareLocal(Session.java:172)
	at org.h2.engine.Session.prepareCommand(Session.java:154)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:971)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:1208)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:165)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:365)
	at helio.materialiser.evaluator.H2Evaluator.initH2Cache(H2Evaluator.java:143)
	at helio.materialiser.HelioMaterialiser.<init>(HelioMaterialiser.java:43)
	at semanticgateway.service.MaterialiserService.addMappings(MaterialiserService.java:24)
	at semanticgateway.service.SemanticDataService.initialiseMaterialiser(SemanticDataService.java:48)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.initialiseMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.firstVirtualization(IndexController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:309)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1691)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at semanticgateway.SemanticGatewayApplication.main(SemanticGatewayApplication.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.PropertiesLauncher.main(PropertiesLauncher.java:593)
10-30 15:38:05 jdbc[302]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[303]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[304]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[305]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[306]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[307]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[308]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[309]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[310]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[311]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[312]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[313]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[314]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[315]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[316]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[317]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[318]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[319]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[320]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[321]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[322]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[323]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[324]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[325]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[326]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[327]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[328]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[329]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[330]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[331]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[332]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[333]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[334]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[335]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[336]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[337]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[338]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[339]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[340]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[341]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[342]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[343]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[344]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[345]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[346]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[347]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[348]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[349]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[350]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 15:38:05 jdbc[351]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c1cd2a.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[705]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[706]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[707]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[708]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[709]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[710]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[711]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[712]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[713]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[714]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[715]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[716]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[717]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[718]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[719]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[720]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[721]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[722]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[723]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[724]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[725]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[726]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[727]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[728]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[729]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[730]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[731]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[732]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[733]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[734]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[735]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[736]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[737]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[738]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[739]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[740]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[741]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[742]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[743]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[744]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[745]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[746]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[747]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[748]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[749]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[750]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[751]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[752]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[753]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:18:48 jdbc[754]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9100e7ca.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:163)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:365)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:26:58 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:495)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:242)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:375)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$77dc1e4f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:29:47 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$86795c3d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:30:51 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$3c0c4a1f.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:35:58 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-31 00:49:59 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$9c492fc3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[152]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[153]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[154]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[155]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[156]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[157]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[158]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[159]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[160]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[161]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[162]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[163]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[164]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[165]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[166]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[167]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[168]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[169]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[170]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[171]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[172]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[173]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[174]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[175]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[176]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[177]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[178]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[179]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[180]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[181]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[182]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[183]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[184]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[185]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[186]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[187]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[188]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[189]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[190]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[191]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[192]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[193]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[194]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[195]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[196]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[197]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[198]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[199]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[200]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-04 21:12:41 jdbc[201]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$a9f481a5.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[202]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[203]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[204]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[205]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[206]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[207]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[208]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[209]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[210]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[211]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[212]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[213]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[214]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[215]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[216]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[217]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[218]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[219]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[220]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[221]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[222]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[223]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[224]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[225]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[226]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[227]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[228]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[229]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[230]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[231]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[232]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[233]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[234]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[235]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[236]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[237]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[238]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[239]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[240]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[241]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[242]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[243]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[244]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[245]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[246]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[247]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[248]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[249]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[250]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 01:49:02 jdbc[251]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e3f898d3.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-07 21:34:33 jdbc[202]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ff83a2d8.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-07 21:34:33 jdbc[203]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ff83a2d8.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-07 21:34:33 jdbc[204]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ff83a2d8.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-07 21:34:34 jdbc[205]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:163)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:365)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ff83a2d8.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-07 21:34:34 jdbc[205]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:495)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:242)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:375)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ff83a2d8.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
